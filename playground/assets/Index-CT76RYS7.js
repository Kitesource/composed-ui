import{d as x,f as s,m as d,r as p,a as S,o as B,b as t,c as a,t as V,w as r,e as v,S as I}from"./index-B__MQh0N.js";const k=x({__name:"Index",setup(C){const u=s(3),i=s(6),f=s(1e3),b=s(100),g=s(!0);d(()=>{console.log("value",u.value)}),d(()=>{console.log("lazyValue",i.value)}),d(()=>{console.log("formatValue1",f.value)}),d(()=>{console.log("formatValue2",b.value)});function y(n){return I(n,2)+"%"}function N(n){return Number(n.replace(/[,%]/g,""))}function U(n){console.log("change",n)}function w(n){console.log("enter",n)}return(n,l)=>{const z=p("Alert"),o=p("InputNumber"),m=p("Space"),$=p("Switch");return B(),S("div",null,[t("h1",null,V(n.$route.name)+" "+V(n.$route.meta.title),1),l[12]||(l[12]=t("h2",{class:"mt30 mb10"},"基本使用",-1)),a(m,{gap:"small",vertical:""},{default:r(()=>[a(z,{type:"info"},{default:r(()=>[...l[10]||(l[10]=[v(" .lazy: ",-1),t("br",null,null,-1),v(" 默认情况下，v-model 会在每次 input 事件后更新数据 (IME 拼字阶段的状态例外)。 ",-1),t("br",null,null,-1),v(" 你可以添加 lazy 修饰符来改为在每次 change 事件后更新数据： ",-1),t("br",null,null,-1),v(" "+V('<InputNumber v-model:value.lazy="value" />'),-1)])]),_:1}),a(o,{width:120,value:u.value,"onUpdate:value":l[0]||(l[0]=e=>u.value=e),placeholder:"Basic usage",onChange:U,onEnter:w},null,8,["value"]),a(o,{width:120,value:i.value,"onUpdate:value":l[1]||(l[1]=e=>i.value=e),valueModifiers:{lazy:!0},placeholder:"Lazy usage",onChange:U,onEnter:w},null,8,["value"])]),_:1}),l[13]||(l[13]=t("h2",{class:"mt30 mb10"},"步数为小数",-1)),a(o,{step:.1,value:u.value,"onUpdate:value":l[2]||(l[2]=e=>u.value=e)},null,8,["value"]),l[14]||(l[14]=t("h2",{class:"mt30 mb10"},"设置数值精度",-1)),a(o,{min:-10,max:10,step:.6,precision:2,value:u.value,"onUpdate:value":l[3]||(l[3]=e=>u.value=e)},null,8,["value"]),l[15]||(l[15]=t("h2",{class:"mt30 mb10"},"格式化展示",-1)),a(m,null,{default:r(()=>[a(o,{width:120,value:f.value,"onUpdate:value":l[4]||(l[4]=e=>f.value=e),formatter:e=>`$ ${e}`.replace(/\B(?=(\d{3})+(?!\d))/g,","),parser:e=>e.replace(/\$\s?|(,*)/g,"")},null,8,["value","formatter","parser"]),a(o,{width:120,value:b.value,"onUpdate:value":l[5]||(l[5]=e=>b.value=e),formatter:y,parser:N},null,8,["value"])]),_:1}),l[16]||(l[16]=t("h2",{class:"mt30 mb10"},"自定义最大最小值",-1)),a(o,{min:0,max:10,value:u.value,"onUpdate:value":l[6]||(l[6]=e=>u.value=e)},null,8,["value"]),l[17]||(l[17]=t("h2",{class:"mt30 mb10"},"添加前缀图标 $",-1)),a(o,{prefix:"$",value:u.value,"onUpdate:value":l[7]||(l[7]=e=>u.value=e)},null,8,["value"]),l[18]||(l[18]=t("h2",{class:"mt30 mb10"},"禁用",-1)),a(m,{vertical:""},{default:r(()=>[a(m,{align:"center"},{default:r(()=>[l[11]||(l[11]=v("disabled: ",-1)),a($,{modelValue:g.value,"onUpdate:modelValue":l[8]||(l[8]=e=>g.value=e)},null,8,["modelValue"])]),_:1}),a(o,{value:u.value,"onUpdate:value":l[9]||(l[9]=e=>u.value=e),disabled:g.value},null,8,["value","disabled"])]),_:1})])}}});export{k as default};
